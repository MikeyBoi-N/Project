/* Styles for shared layout components */

.layoutContainer {
  display: flex;
  flex-direction: column; /* Header on top, then sidebar+content */
  height: 100vh; /* Use viewport height */
  background-color: #212121; /* Main background */
  color: #FFFFFF;
  overflow: auto; /* Allow scrolling on the main container */
}

.header {
  display: flex;
  align-items: center;
  padding: 15px 30px;
  border-bottom: 1px solid #444; /* Separator line */
  background-color: #212121; /* Or a slightly different shade if needed */
  flex-shrink: 0; /* Prevent header from shrinking */
}

.headerLogo {
  margin-right: 15px;
  /* Styles for the next/image component will be handled mostly inline or via props */
  /* Ensure vertical alignment if needed */
  display: flex; /* Helps with vertical alignment */
  align-items: center;
}

.headerTitle {
  font-family: 'Anonymous Pro', monospace;
  font-weight: 700; /* Bold like login */
  font-size: 24px; /* Match Figma style_GZ5Z1L */
  color: #FFFFFF;
}

.mainContentArea {
  display: flex;
  flex-grow: 1; /* Takes remaining vertical space */
  overflow: auto; /* Allow scrolling */
}

/* Styles for the ResizableBox container */
.sidebarResizableContainer {
  position: relative; /* Needed for absolute positioning of the handle */
  flex-shrink: 0; /* Prevent shrinking */
  display: flex; /* Use flex to manage inner content */
  background-color: #212121; /* Match main background */
  border-right: 1px solid #444; /* Separator */
}

/* Styles for the actual sidebar nav element inside the resizable container */
.sidebar {
  /* width: 100%; Let ResizableBox control width */
  height: 100%; /* Fill the height of the resizable container */
  background-color: #212121; /* Match main background */
  padding: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden; /* Hide overflow on the nav itself, inner div will scroll */
  box-sizing: border-box; /* Include padding in width/height calculation */
}


/* Style for the container that needs to scroll within the sidebar */
.sidebarScrollableArea {
  flex-grow: 1; /* Allow this area to take up available vertical space */
  min-height: 0; /* Important for allowing shrinking within flex container */
  /* position: relative; Optional: Add if ScrollableContent needs a positioning context */
}

/* Styles for the inner div that handles scrolling */
.sidebarContent {
  flex-grow: 1; /* Allow this div to take up available space */
  overflow-y: auto; /* Enable vertical scrolling */
  overflow-x: hidden; /* Prevent horizontal scrolling */
  /* Add some padding if needed, separate from the main sidebar padding */
  padding-right: 5px; /* Space for scrollbar */
}

/* Custom styling for the resize handle */
.customResizeHandle {
  position: absolute;
  right: -5px; /* Position slightly outside the box */
  top: 0;
  height: 100%;
  width: 10px; /* Width of the draggable area */
  cursor: col-resize; /* Standard resize cursor */
  z-index: 10; /* Ensure it's clickable */
  /* Optional: Add a visual indicator */
  /* background: rgba(255, 255, 255, 0.1); */
  /* border-left: 1px solid #666; */
}

.sidebarLink {
  font-family: 'Anonymous Pro', monospace;
  font-size: 16px; /* Match Figma style_PCMQBQ */
  color: #FFFFFF;
  padding: 10px 15px;
  margin-bottom: 10px;
  border-radius: 5px;
  text-decoration: none;
  transition: background-color 0.2s ease;
  cursor: pointer; /* Indicate interactivity */
}

.sidebarLink:hover {
  background-color: #444;
}

.sidebarLinkActive {
  composes: sidebarLink; /* Inherit base styles */
  background-color: #555; /* Highlight for active link (adjust color based on Figma) */
  font-weight: bold;
}

.pageContent {
  flex-grow: 1; /* Takes remaining horizontal space */
  position: relative; /* Needed for absolutely positioned children like overlays */
  overflow: auto; /* Enable scrolling at this level */
  /* padding: 20px; */ /* Let inner components manage their own padding */
  display: flex; /* Use flexbox to allow child to grow */
  flex-direction: column; /* Stack children vertically */
}

/* Styles for Header Icons */
.headerIcons {
  display: flex;
  align-items: center;
  margin-left: auto; /* Push icons to the right */
  gap: 15px; /* Space between icons */
}

.icon {
  font-size: 20px; /* Adjust size as needed */
  color: #FFFFFF; /* Ensure icons are white */
  cursor: pointer; /* Indicate clickable settings icon */
}

/* Specific styling for the icon within the Link if needed */
.headerIcons a {
  color: inherit; /* Ensure link doesn't change icon color */
  display: flex; /* Align icon correctly within link */
  align-items: center;
}

/* Styles for Header Dropdown */
.headerTitleContainer {
  position: relative; /* Needed for absolute positioning of the dropdown */
  display: inline-block; /* Keep it inline but allow relative positioning */
}

.clickableHeader {
  cursor: pointer;
  /* Optional: Add a subtle hover effect */
  transition: color 0.2s ease;
}

.clickableHeader:hover {
  color: #cccccc; /* Slightly lighter on hover */
}

.dropdownMenu {
  position: absolute;
  top: 100%; /* Position below the header title */
  left: 0;
  background-color: #333; /* Slightly different dark background */
  border: 1px solid #555;
  border-radius: 4px;
  padding: 8px 0; /* Padding top/bottom */
  min-width: 150px; /* Ensure minimum width */
  z-index: 1000; /* Ensure it's above other content */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.dropdownItem {
  font-family: 'Inter', sans-serif; /* Use a standard font */
  font-size: 14px;
  color: #FFFFFF;
  padding: 10px 15px;
  display: block; /* Make the whole area clickable */
  text-decoration: none;
  white-space: nowrap; /* Prevent wrapping */
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.dropdownItem:hover {
  background-color: #555; /* Hover effect */
}