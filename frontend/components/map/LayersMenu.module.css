.layersMenuContainer {
    position: relative; /* Needed for absolute positioning of the panel if required, or for transform-origin */
    display: flex;
    flex-direction: column;
    align-items: flex-end; /* Align items to the right */
}

.layersButton {
    background-color: transparent; /* Remove background, image provides visual */
    border: 1px solid rgba(255, 255, 255, 0.3); /* Figma border */
    padding: 0; /* Remove padding, image fills button */
    border-radius: 6px; /* Match Figma node 2040:212 */
    cursor: pointer;
    display: block;
    width: 60px; /* Match Figma node 2040:212 size */
    height: 60px; /* Match Figma node 2040:212 size */
    margin-bottom: 8px; /* Add some space between button and panel */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    overflow: hidden; /* Ensure image respects border-radius */
    transition: border-color 0.2s ease;
    position: relative; /* Ensure it's above the panel if overlapping */
    z-index: 10; /* Ensure button is clickable above panel */
}

.layersButton:hover {
    border-color: rgba(255, 255, 255, 0.7); /* Slightly brighter border on hover */
}

.layersButtonImage { /* Style for the image inside the button */
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 5px; /* Slightly smaller than button radius to show border */
}

.layersPanel {
    position: absolute; /* Position relative to container */
    top: -220px; /* Position directly below the button (height) */
    right: 0; /* Align to the right edge of the container */

    background-color: #2c2c2e; /* Dark background from Figma fill_MZSN9J (approximated) */
    color: white;
    padding: 15px;
    border-radius: 8px; /* Match Figma */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    width: 200px; /* Match Figma width (adjust if needed) */
    display: flex;
    flex-direction: column;
    gap: 10px;
    transform-origin: top right; /* Animate from the top-right corner */
    /* Initial (closed) state */
    opacity: 0;
    transform: scale(0.95);
    visibility: hidden; /* Keep visibility for accessibility potentially */
    /* max-height removed for simplicity */
    /* overflow: hidden; removed for simplicity */
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0s linear 0.3s; /* Delay visibility change */
    z-index: 5; /* Below the button */
}

.panelOpen {
    /* Open state */
    opacity: 1;
    transform: scale(1);
    visibility: visible;
    /* max-height removed */
    /* overflow: visible; removed */
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0s linear 0s; /* Visibility changes instantly */
}


.styleOptions {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* 3 columns as per Figma */
    gap: 8px; /* Spacing between previews */
    margin-bottom: 15px; /* Space before toggles */
}

.stylePreview {
    width: 100%; /* Let grid control width */
    aspect-ratio: 1; /* Make it square */
    border-radius: 4px; /* Figma */
    cursor: pointer;
    border: 2px solid transparent; /* Border for selection indication */
    display: block;
    overflow: hidden; /* Ensure image stays within bounds */
    position: relative;
    transition: border-color 0.2s ease;
}

.stylePreview:hover {
    border-color: rgba(255, 255, 255, 0.5); /* Subtle hover indication */
}

.stylePreview.selected {
    border-color: #ffffff; /* White border for selected */
}

.previewImage {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Ensure image covers the area */
    border-radius: 2px; /* Slightly smaller radius inside the border */
}


.togglesContainer {
    display: flex;
    flex-direction: column;
    gap: 8px;
    border-top: 1px solid rgba(255, 255, 255, 0.2); /* Lighter border */
    padding-top: 10px;
}

.toggleItem {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.8); /* Slightly muted text */
}

/* Basic Checkbox Styling (replace with styled toggles if needed) */
.toggleItem input[type="checkbox"] {
    margin-left: 10px;
    cursor: pointer;
    accent-color: #007aff; /* Example accent color */
    /* Add more styling for custom toggle appearance */
}

.toggleItem input[type="checkbox"]:disabled {
    cursor: not-allowed;
    opacity: 0.5;
}

.toggleItem label {
    flex-grow: 1;
}